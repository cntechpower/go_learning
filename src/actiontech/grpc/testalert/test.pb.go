// Code generated by protoc-gen-go. DO NOT EDIT.
// source: test.proto

/*
Package testalert is a generated protocol buffer package.

It is generated from these files:
	test.proto

It has these top-level messages:
	SendAlertInput
	Empty
*/
package testalert

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type SendAlertInput_Code int32

const (
	SendAlertInput_Promote_Fail    SendAlertInput_Code = 0
	SendAlertInput_Promote_Success SendAlertInput_Code = 1
)

var SendAlertInput_Code_name = map[int32]string{
	0: "Promote_Fail",
	1: "Promote_Success",
}
var SendAlertInput_Code_value = map[string]int32{
	"Promote_Fail":    0,
	"Promote_Success": 1,
}

func (x SendAlertInput_Code) String() string {
	return proto.EnumName(SendAlertInput_Code_name, int32(x))
}
func (SendAlertInput_Code) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

type SendAlertInput struct {
	Code SendAlertInput_Code `protobuf:"varint,1,opt,name=code,enum=testalert.SendAlertInput_Code" json:"code,omitempty"`
}

func (m *SendAlertInput) Reset()                    { *m = SendAlertInput{} }
func (m *SendAlertInput) String() string            { return proto.CompactTextString(m) }
func (*SendAlertInput) ProtoMessage()               {}
func (*SendAlertInput) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *SendAlertInput) GetCode() SendAlertInput_Code {
	if m != nil {
		return m.Code
	}
	return SendAlertInput_Promote_Fail
}

type Empty struct {
}

func (m *Empty) Reset()                    { *m = Empty{} }
func (m *Empty) String() string            { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()               {}
func (*Empty) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func init() {
	proto.RegisterType((*SendAlertInput)(nil), "testalert.SendAlertInput")
	proto.RegisterType((*Empty)(nil), "testalert.Empty")
	proto.RegisterEnum("testalert.SendAlertInput_Code", SendAlertInput_Code_name, SendAlertInput_Code_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for AlertSender service

type AlertSenderClient interface {
	SendAlert(ctx context.Context, in *SendAlertInput, opts ...grpc.CallOption) (*Empty, error)
}

type alertSenderClient struct {
	cc *grpc.ClientConn
}

func NewAlertSenderClient(cc *grpc.ClientConn) AlertSenderClient {
	return &alertSenderClient{cc}
}

func (c *alertSenderClient) SendAlert(ctx context.Context, in *SendAlertInput, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := grpc.Invoke(ctx, "/testalert.AlertSender/SendAlert", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for AlertSender service

type AlertSenderServer interface {
	SendAlert(context.Context, *SendAlertInput) (*Empty, error)
}

func RegisterAlertSenderServer(s *grpc.Server, srv AlertSenderServer) {
	s.RegisterService(&_AlertSender_serviceDesc, srv)
}

func _AlertSender_SendAlert_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendAlertInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AlertSenderServer).SendAlert(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/testalert.AlertSender/SendAlert",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AlertSenderServer).SendAlert(ctx, req.(*SendAlertInput))
	}
	return interceptor(ctx, in, info, handler)
}

var _AlertSender_serviceDesc = grpc.ServiceDesc{
	ServiceName: "testalert.AlertSender",
	HandlerType: (*AlertSenderServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SendAlert",
			Handler:    _AlertSender_SendAlert_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "test.proto",
}

func init() { proto.RegisterFile("test.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 170 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2a, 0x49, 0x2d, 0x2e,
	0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x04, 0xb1, 0x13, 0x73, 0x52, 0x8b, 0x4a, 0x94,
	0x8a, 0xb9, 0xf8, 0x82, 0x53, 0xf3, 0x52, 0x1c, 0x41, 0x1c, 0xcf, 0xbc, 0x82, 0xd2, 0x12, 0x21,
	0x23, 0x2e, 0x96, 0xe4, 0xfc, 0x94, 0x54, 0x09, 0x46, 0x05, 0x46, 0x0d, 0x3e, 0x23, 0x39, 0x3d,
	0xb8, 0x5a, 0x3d, 0x54, 0x85, 0x7a, 0xce, 0xf9, 0x29, 0xa9, 0x41, 0x60, 0xb5, 0x4a, 0xba, 0x5c,
	0x2c, 0x20, 0x9e, 0x90, 0x00, 0x17, 0x4f, 0x40, 0x51, 0x7e, 0x6e, 0x7e, 0x49, 0x6a, 0xbc, 0x5b,
	0x62, 0x66, 0x8e, 0x00, 0x83, 0x90, 0x30, 0x17, 0x3f, 0x4c, 0x24, 0xb8, 0x34, 0x39, 0x39, 0xb5,
	0xb8, 0x58, 0x80, 0x51, 0x89, 0x9d, 0x8b, 0xd5, 0x35, 0xb7, 0xa0, 0xa4, 0xd2, 0xc8, 0x9d, 0x8b,
	0x1b, 0x6c, 0x20, 0xc8, 0xe4, 0xd4, 0x22, 0x21, 0x0b, 0x2e, 0x4e, 0xb8, 0x1d, 0x42, 0x92, 0x38,
	0x6d, 0x96, 0x12, 0x40, 0x92, 0x02, 0x1b, 0x94, 0xc4, 0x06, 0xf6, 0x98, 0x31, 0x20, 0x00, 0x00,
	0xff, 0xff, 0xf3, 0xca, 0xba, 0x68, 0xe6, 0x00, 0x00, 0x00,
}
